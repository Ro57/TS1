syntax = "proto3";

package issuer;

option go_package = "github.com/pkt-cash/pktd/lnd/lnrpc/protos/issuer";

import "google/protobuf/empty.proto";
import "protos/replicator/replicator.proto";


// IssuerService Is mainly used to generate compatible querier (client)
//
// Generated client can be used to serve two main purposes:
//  - to interact with it via generated client
//  - to test generated client implementation by mocking generated server
//
service IssuerService {
    // SignTokenSell Returns token sell signature for further
    // registration along with offer via Replication Server
    rpc SignTokenSell (SignTokenSellRequest) returns (SignTokenSellResponse);

    // IssueToken — Issue new token with given data. Request data equal to 
    // token purchase data, because it is token offer.
    rpc IssueToken(replicator.IssueTokenRequest) 
        returns (google.protobuf.Empty);

    // GetTokenList — return list of issued token with information about
    // expiration time and fix price.
    rpc GetTokenList(replicator.GetTokenListRequest) 
        returns(replicator.GetTokenListResponse);

}

// SignTokenSellRequest — info about sell token
message SignTokenSellRequest {
    // offer on sell token
    replicator.TokenOffer offer = 1;
}

// SignTokenSellResponse — info about sign offer
message SignTokenSellResponse {
    // issuer_signature signature on sell offer
    string issuer_signature = 1;
}