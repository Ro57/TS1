// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protos/replicator/replicator.proto

package replicator

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	DB "github.com/pkt-cash/pktd/lnd/lnrpc/protos/DB"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetTokenOffersRequest struct {
	IssuerId             string      `protobuf:"bytes,1,opt,name=issuer_id,json=issuerId,proto3" json:"issuer_id,omitempty"`
	Params               *Pagination `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *GetTokenOffersRequest) Reset()         { *m = GetTokenOffersRequest{} }
func (m *GetTokenOffersRequest) String() string { return proto.CompactTextString(m) }
func (*GetTokenOffersRequest) ProtoMessage()    {}
func (*GetTokenOffersRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f2f15fabe54a973d, []int{0}
}

func (m *GetTokenOffersRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTokenOffersRequest.Unmarshal(m, b)
}
func (m *GetTokenOffersRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTokenOffersRequest.Marshal(b, m, deterministic)
}
func (m *GetTokenOffersRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTokenOffersRequest.Merge(m, src)
}
func (m *GetTokenOffersRequest) XXX_Size() int {
	return xxx_messageInfo_GetTokenOffersRequest.Size(m)
}
func (m *GetTokenOffersRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTokenOffersRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetTokenOffersRequest proto.InternalMessageInfo

func (m *GetTokenOffersRequest) GetIssuerId() string {
	if m != nil {
		return m.IssuerId
	}
	return ""
}

func (m *GetTokenOffersRequest) GetParams() *Pagination {
	if m != nil {
		return m.Params
	}
	return nil
}

type GetTokenOffersResponse struct {
	Offers               []*TokenOffer `protobuf:"bytes,1,rep,name=offers,proto3" json:"offers,omitempty"`
	Total                uint64        `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *GetTokenOffersResponse) Reset()         { *m = GetTokenOffersResponse{} }
func (m *GetTokenOffersResponse) String() string { return proto.CompactTextString(m) }
func (*GetTokenOffersResponse) ProtoMessage()    {}
func (*GetTokenOffersResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f2f15fabe54a973d, []int{1}
}

func (m *GetTokenOffersResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTokenOffersResponse.Unmarshal(m, b)
}
func (m *GetTokenOffersResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTokenOffersResponse.Marshal(b, m, deterministic)
}
func (m *GetTokenOffersResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTokenOffersResponse.Merge(m, src)
}
func (m *GetTokenOffersResponse) XXX_Size() int {
	return xxx_messageInfo_GetTokenOffersResponse.Size(m)
}
func (m *GetTokenOffersResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTokenOffersResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetTokenOffersResponse proto.InternalMessageInfo

func (m *GetTokenOffersResponse) GetOffers() []*TokenOffer {
	if m != nil {
		return m.Offers
	}
	return nil
}

func (m *GetTokenOffersResponse) GetTotal() uint64 {
	if m != nil {
		return m.Total
	}
	return 0
}

// GetTokenListRequest — request token list with pagination
type GetTokenListRequest struct {
	// issuer_id is user login issued this token
	IssuerId string `protobuf:"bytes,1,opt,name=issuer_id,json=issuerId,proto3" json:"issuer_id,omitempty"`
	// params of paginaton
	Params *Pagination `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
	// local its provide getting data from local database
	Local                bool     `protobuf:"varint,3,opt,name=local,proto3" json:"local,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTokenListRequest) Reset()         { *m = GetTokenListRequest{} }
func (m *GetTokenListRequest) String() string { return proto.CompactTextString(m) }
func (*GetTokenListRequest) ProtoMessage()    {}
func (*GetTokenListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f2f15fabe54a973d, []int{2}
}

func (m *GetTokenListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTokenListRequest.Unmarshal(m, b)
}
func (m *GetTokenListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTokenListRequest.Marshal(b, m, deterministic)
}
func (m *GetTokenListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTokenListRequest.Merge(m, src)
}
func (m *GetTokenListRequest) XXX_Size() int {
	return xxx_messageInfo_GetTokenListRequest.Size(m)
}
func (m *GetTokenListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTokenListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetTokenListRequest proto.InternalMessageInfo

func (m *GetTokenListRequest) GetIssuerId() string {
	if m != nil {
		return m.IssuerId
	}
	return ""
}

func (m *GetTokenListRequest) GetParams() *Pagination {
	if m != nil {
		return m.Params
	}
	return nil
}

func (m *GetTokenListRequest) GetLocal() bool {
	if m != nil {
		return m.Local
	}
	return false
}

// GetTokenListResponse — list of tokens with additional info
type GetTokenListResponse struct {
	// tokens list of registred tokens
	Tokens []*Token `protobuf:"bytes,1,rep,name=tokens,proto3" json:"tokens,omitempty"`
	// total number of registered tokens, if the issued_id is passed, only
	// its tokens are taken into account
	Total                int32    `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTokenListResponse) Reset()         { *m = GetTokenListResponse{} }
func (m *GetTokenListResponse) String() string { return proto.CompactTextString(m) }
func (*GetTokenListResponse) ProtoMessage()    {}
func (*GetTokenListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f2f15fabe54a973d, []int{3}
}

func (m *GetTokenListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTokenListResponse.Unmarshal(m, b)
}
func (m *GetTokenListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTokenListResponse.Marshal(b, m, deterministic)
}
func (m *GetTokenListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTokenListResponse.Merge(m, src)
}
func (m *GetTokenListResponse) XXX_Size() int {
	return xxx_messageInfo_GetTokenListResponse.Size(m)
}
func (m *GetTokenListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTokenListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetTokenListResponse proto.InternalMessageInfo

func (m *GetTokenListResponse) GetTokens() []*Token {
	if m != nil {
		return m.Tokens
	}
	return nil
}

func (m *GetTokenListResponse) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

type Token struct {
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// offer on token issue
	Token                *DB.Token `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	Root                 string    `protobuf:"bytes,3,opt,name=root,proto3" json:"root,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Token) Reset()         { *m = Token{} }
func (m *Token) String() string { return proto.CompactTextString(m) }
func (*Token) ProtoMessage()    {}
func (*Token) Descriptor() ([]byte, []int) {
	return fileDescriptor_f2f15fabe54a973d, []int{4}
}

func (m *Token) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Token.Unmarshal(m, b)
}
func (m *Token) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Token.Marshal(b, m, deterministic)
}
func (m *Token) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Token.Merge(m, src)
}
func (m *Token) XXX_Size() int {
	return xxx_messageInfo_Token.Size(m)
}
func (m *Token) XXX_DiscardUnknown() {
	xxx_messageInfo_Token.DiscardUnknown(m)
}

var xxx_messageInfo_Token proto.InternalMessageInfo

func (m *Token) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Token) GetToken() *DB.Token {
	if m != nil {
		return m.Token
	}
	return nil
}

func (m *Token) GetRoot() string {
	if m != nil {
		return m.Root
	}
	return ""
}

type TokenOffer struct {
	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	// TODO: discuss
	//  ? Should we assume decimal prices
	//  ? Add units field
	Price      uint64      `protobuf:"varint,2,opt,name=price,proto3" json:"price,omitempty"`
	IssuerInfo *IssuerInfo `protobuf:"bytes,3,opt,name=issuer_info,json=issuerInfo,proto3" json:"issuer_info,omitempty"`
	// It is assumed that the each registered token holder login is unique
	//
	// Value of this field may be empty orRegisterTokenHolder filled depending
	// on context (e.g. gettokenoffers, verifytokenpurchasesignature)
	TokenHolderLogin string `protobuf:"bytes,4,opt,name=token_holder_login,json=tokenHolderLogin,proto3" json:"token_holder_login,omitempty"`
	// It is assumed that the each registered token holder login is unique
	//
	// Value of this field may be empty or filled depending on context
	// (e.g. gettokenoffers, verifytokenpurchasesignature)
	TokenBuyerLogin string `protobuf:"bytes,5,opt,name=token_buyer_login,json=tokenBuyerLogin,proto3" json:"token_buyer_login,omitempty"`
	// This field protects issuers from such a case, when potential buyer
	// successfully acquires dozens of signatures just in case if that issuer
	// would raise up the price later. If a Token Wallet holder would like to
	// open channel with an outdated offer, Replicator would reject to register
	// this purchase and buyer stays unprotected
	ValidUntilSeconds int64 `protobuf:"varint,6,opt,name=valid_until_seconds,json=validUntilSeconds,proto3" json:"valid_until_seconds,omitempty"`
	// count — the number of tokens to be issued
	Count                uint64   `protobuf:"varint,7,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TokenOffer) Reset()         { *m = TokenOffer{} }
func (m *TokenOffer) String() string { return proto.CompactTextString(m) }
func (*TokenOffer) ProtoMessage()    {}
func (*TokenOffer) Descriptor() ([]byte, []int) {
	return fileDescriptor_f2f15fabe54a973d, []int{5}
}

func (m *TokenOffer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TokenOffer.Unmarshal(m, b)
}
func (m *TokenOffer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TokenOffer.Marshal(b, m, deterministic)
}
func (m *TokenOffer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TokenOffer.Merge(m, src)
}
func (m *TokenOffer) XXX_Size() int {
	return xxx_messageInfo_TokenOffer.Size(m)
}
func (m *TokenOffer) XXX_DiscardUnknown() {
	xxx_messageInfo_TokenOffer.DiscardUnknown(m)
}

var xxx_messageInfo_TokenOffer proto.InternalMessageInfo

func (m *TokenOffer) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *TokenOffer) GetPrice() uint64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *TokenOffer) GetIssuerInfo() *IssuerInfo {
	if m != nil {
		return m.IssuerInfo
	}
	return nil
}

func (m *TokenOffer) GetTokenHolderLogin() string {
	if m != nil {
		return m.TokenHolderLogin
	}
	return ""
}

func (m *TokenOffer) GetTokenBuyerLogin() string {
	if m != nil {
		return m.TokenBuyerLogin
	}
	return ""
}

func (m *TokenOffer) GetValidUntilSeconds() int64 {
	if m != nil {
		return m.ValidUntilSeconds
	}
	return 0
}

func (m *TokenOffer) GetCount() uint64 {
	if m != nil {
		return m.Count
	}
	return 0
}

type IssuerInfo struct {
	// This value is explicetely used by Replicator to uniquely identify related
	// issuer later in order to ban him (discredite case), since
	// "identity_pubkey", "host" may be changed
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The following field values are used to open payment channel, invoices
	// commands execution etc.
	IdentityPubkey string `protobuf:"bytes,2,opt,name=identity_pubkey,json=identityPubkey,proto3" json:"identity_pubkey,omitempty"`
	// Is used to establish client connection to the issuer's node during some
	// RPC calls
	Host                 string   `protobuf:"bytes,3,opt,name=host,proto3" json:"host,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IssuerInfo) Reset()         { *m = IssuerInfo{} }
func (m *IssuerInfo) String() string { return proto.CompactTextString(m) }
func (*IssuerInfo) ProtoMessage()    {}
func (*IssuerInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_f2f15fabe54a973d, []int{6}
}

func (m *IssuerInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IssuerInfo.Unmarshal(m, b)
}
func (m *IssuerInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IssuerInfo.Marshal(b, m, deterministic)
}
func (m *IssuerInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IssuerInfo.Merge(m, src)
}
func (m *IssuerInfo) XXX_Size() int {
	return xxx_messageInfo_IssuerInfo.Size(m)
}
func (m *IssuerInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_IssuerInfo.DiscardUnknown(m)
}

var xxx_messageInfo_IssuerInfo proto.InternalMessageInfo

func (m *IssuerInfo) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *IssuerInfo) GetIdentityPubkey() string {
	if m != nil {
		return m.IdentityPubkey
	}
	return ""
}

func (m *IssuerInfo) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

// NOTE: we don't provide any token holder identification since the reqeuest is
// authorized with JWT applied to the request metadata. It means, that
// replicator is capable to extract all data needed to process the request
type GetTokenBalancesRequest struct {
	Params               *Pagination `protobuf:"bytes,1,opt,name=params,proto3" json:"params,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *GetTokenBalancesRequest) Reset()         { *m = GetTokenBalancesRequest{} }
func (m *GetTokenBalancesRequest) String() string { return proto.CompactTextString(m) }
func (*GetTokenBalancesRequest) ProtoMessage()    {}
func (*GetTokenBalancesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f2f15fabe54a973d, []int{7}
}

func (m *GetTokenBalancesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTokenBalancesRequest.Unmarshal(m, b)
}
func (m *GetTokenBalancesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTokenBalancesRequest.Marshal(b, m, deterministic)
}
func (m *GetTokenBalancesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTokenBalancesRequest.Merge(m, src)
}
func (m *GetTokenBalancesRequest) XXX_Size() int {
	return xxx_messageInfo_GetTokenBalancesRequest.Size(m)
}
func (m *GetTokenBalancesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTokenBalancesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetTokenBalancesRequest proto.InternalMessageInfo

func (m *GetTokenBalancesRequest) GetParams() *Pagination {
	if m != nil {
		return m.Params
	}
	return nil
}

type GetTokenBalancesResponse struct {
	Balances             []*TokenBalance `protobuf:"bytes,1,rep,name=balances,proto3" json:"balances,omitempty"`
	Total                uint64          `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *GetTokenBalancesResponse) Reset()         { *m = GetTokenBalancesResponse{} }
func (m *GetTokenBalancesResponse) String() string { return proto.CompactTextString(m) }
func (*GetTokenBalancesResponse) ProtoMessage()    {}
func (*GetTokenBalancesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f2f15fabe54a973d, []int{8}
}

func (m *GetTokenBalancesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTokenBalancesResponse.Unmarshal(m, b)
}
func (m *GetTokenBalancesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTokenBalancesResponse.Marshal(b, m, deterministic)
}
func (m *GetTokenBalancesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTokenBalancesResponse.Merge(m, src)
}
func (m *GetTokenBalancesResponse) XXX_Size() int {
	return xxx_messageInfo_GetTokenBalancesResponse.Size(m)
}
func (m *GetTokenBalancesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTokenBalancesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetTokenBalancesResponse proto.InternalMessageInfo

func (m *GetTokenBalancesResponse) GetBalances() []*TokenBalance {
	if m != nil {
		return m.Balances
	}
	return nil
}

func (m *GetTokenBalancesResponse) GetTotal() uint64 {
	if m != nil {
		return m.Total
	}
	return 0
}

type TokenBalance struct {
	Token                string   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Available            uint64   `protobuf:"varint,2,opt,name=available,proto3" json:"available,omitempty"`
	Frozen               uint64   `protobuf:"varint,3,opt,name=frozen,proto3" json:"frozen,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TokenBalance) Reset()         { *m = TokenBalance{} }
func (m *TokenBalance) String() string { return proto.CompactTextString(m) }
func (*TokenBalance) ProtoMessage()    {}
func (*TokenBalance) Descriptor() ([]byte, []int) {
	return fileDescriptor_f2f15fabe54a973d, []int{9}
}

func (m *TokenBalance) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TokenBalance.Unmarshal(m, b)
}
func (m *TokenBalance) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TokenBalance.Marshal(b, m, deterministic)
}
func (m *TokenBalance) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TokenBalance.Merge(m, src)
}
func (m *TokenBalance) XXX_Size() int {
	return xxx_messageInfo_TokenBalance.Size(m)
}
func (m *TokenBalance) XXX_DiscardUnknown() {
	xxx_messageInfo_TokenBalance.DiscardUnknown(m)
}

var xxx_messageInfo_TokenBalance proto.InternalMessageInfo

func (m *TokenBalance) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *TokenBalance) GetAvailable() uint64 {
	if m != nil {
		return m.Available
	}
	return 0
}

func (m *TokenBalance) GetFrozen() uint64 {
	if m != nil {
		return m.Frozen
	}
	return 0
}

type Pagination struct {
	Limit                uint64   `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset               uint64   `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Pagination) Reset()         { *m = Pagination{} }
func (m *Pagination) String() string { return proto.CompactTextString(m) }
func (*Pagination) ProtoMessage()    {}
func (*Pagination) Descriptor() ([]byte, []int) {
	return fileDescriptor_f2f15fabe54a973d, []int{10}
}

func (m *Pagination) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Pagination.Unmarshal(m, b)
}
func (m *Pagination) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Pagination.Marshal(b, m, deterministic)
}
func (m *Pagination) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Pagination.Merge(m, src)
}
func (m *Pagination) XXX_Size() int {
	return xxx_messageInfo_Pagination.Size(m)
}
func (m *Pagination) XXX_DiscardUnknown() {
	xxx_messageInfo_Pagination.DiscardUnknown(m)
}

var xxx_messageInfo_Pagination proto.InternalMessageInfo

func (m *Pagination) GetLimit() uint64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *Pagination) GetOffset() uint64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

type VerifyIssuerRequest struct {
	Login                string   `protobuf:"bytes,1,opt,name=login,proto3" json:"login,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VerifyIssuerRequest) Reset()         { *m = VerifyIssuerRequest{} }
func (m *VerifyIssuerRequest) String() string { return proto.CompactTextString(m) }
func (*VerifyIssuerRequest) ProtoMessage()    {}
func (*VerifyIssuerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f2f15fabe54a973d, []int{11}
}

func (m *VerifyIssuerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VerifyIssuerRequest.Unmarshal(m, b)
}
func (m *VerifyIssuerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VerifyIssuerRequest.Marshal(b, m, deterministic)
}
func (m *VerifyIssuerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VerifyIssuerRequest.Merge(m, src)
}
func (m *VerifyIssuerRequest) XXX_Size() int {
	return xxx_messageInfo_VerifyIssuerRequest.Size(m)
}
func (m *VerifyIssuerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_VerifyIssuerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_VerifyIssuerRequest proto.InternalMessageInfo

func (m *VerifyIssuerRequest) GetLogin() string {
	if m != nil {
		return m.Login
	}
	return ""
}

// IssueTokenRequest — info about token will be issued
type IssueTokenRequest struct {
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// offer on token issue
	Offer                *DB.Token `protobuf:"bytes,2,opt,name=offer,proto3" json:"offer,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *IssueTokenRequest) Reset()         { *m = IssueTokenRequest{} }
func (m *IssueTokenRequest) String() string { return proto.CompactTextString(m) }
func (*IssueTokenRequest) ProtoMessage()    {}
func (*IssueTokenRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f2f15fabe54a973d, []int{12}
}

func (m *IssueTokenRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IssueTokenRequest.Unmarshal(m, b)
}
func (m *IssueTokenRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IssueTokenRequest.Marshal(b, m, deterministic)
}
func (m *IssueTokenRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IssueTokenRequest.Merge(m, src)
}
func (m *IssueTokenRequest) XXX_Size() int {
	return xxx_messageInfo_IssueTokenRequest.Size(m)
}
func (m *IssueTokenRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_IssueTokenRequest.DiscardUnknown(m)
}

var xxx_messageInfo_IssueTokenRequest proto.InternalMessageInfo

func (m *IssueTokenRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *IssueTokenRequest) GetOffer() *DB.Token {
	if m != nil {
		return m.Offer
	}
	return nil
}

type SaveBlockRequest struct {
	Name                 string    `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Block                *DB.Block `protobuf:"bytes,2,opt,name=block,proto3" json:"block,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *SaveBlockRequest) Reset()         { *m = SaveBlockRequest{} }
func (m *SaveBlockRequest) String() string { return proto.CompactTextString(m) }
func (*SaveBlockRequest) ProtoMessage()    {}
func (*SaveBlockRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f2f15fabe54a973d, []int{13}
}

func (m *SaveBlockRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SaveBlockRequest.Unmarshal(m, b)
}
func (m *SaveBlockRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SaveBlockRequest.Marshal(b, m, deterministic)
}
func (m *SaveBlockRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SaveBlockRequest.Merge(m, src)
}
func (m *SaveBlockRequest) XXX_Size() int {
	return xxx_messageInfo_SaveBlockRequest.Size(m)
}
func (m *SaveBlockRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SaveBlockRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SaveBlockRequest proto.InternalMessageInfo

func (m *SaveBlockRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SaveBlockRequest) GetBlock() *DB.Block {
	if m != nil {
		return m.Block
	}
	return nil
}

type GetTokenRequest struct {
	TokenId              string   `protobuf:"bytes,1,opt,name=token_id,json=tokenId,proto3" json:"token_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTokenRequest) Reset()         { *m = GetTokenRequest{} }
func (m *GetTokenRequest) String() string { return proto.CompactTextString(m) }
func (*GetTokenRequest) ProtoMessage()    {}
func (*GetTokenRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f2f15fabe54a973d, []int{14}
}

func (m *GetTokenRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTokenRequest.Unmarshal(m, b)
}
func (m *GetTokenRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTokenRequest.Marshal(b, m, deterministic)
}
func (m *GetTokenRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTokenRequest.Merge(m, src)
}
func (m *GetTokenRequest) XXX_Size() int {
	return xxx_messageInfo_GetTokenRequest.Size(m)
}
func (m *GetTokenRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTokenRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetTokenRequest proto.InternalMessageInfo

func (m *GetTokenRequest) GetTokenId() string {
	if m != nil {
		return m.TokenId
	}
	return ""
}

type GetTokenResponse struct {
	Token                *Token   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTokenResponse) Reset()         { *m = GetTokenResponse{} }
func (m *GetTokenResponse) String() string { return proto.CompactTextString(m) }
func (*GetTokenResponse) ProtoMessage()    {}
func (*GetTokenResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f2f15fabe54a973d, []int{15}
}

func (m *GetTokenResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTokenResponse.Unmarshal(m, b)
}
func (m *GetTokenResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTokenResponse.Marshal(b, m, deterministic)
}
func (m *GetTokenResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTokenResponse.Merge(m, src)
}
func (m *GetTokenResponse) XXX_Size() int {
	return xxx_messageInfo_GetTokenResponse.Size(m)
}
func (m *GetTokenResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTokenResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetTokenResponse proto.InternalMessageInfo

func (m *GetTokenResponse) GetToken() *Token {
	if m != nil {
		return m.Token
	}
	return nil
}

type GetIssuerTokensRequest struct {
	Issuer               string   `protobuf:"bytes,1,opt,name=issuer,proto3" json:"issuer,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetIssuerTokensRequest) Reset()         { *m = GetIssuerTokensRequest{} }
func (m *GetIssuerTokensRequest) String() string { return proto.CompactTextString(m) }
func (*GetIssuerTokensRequest) ProtoMessage()    {}
func (*GetIssuerTokensRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f2f15fabe54a973d, []int{16}
}

func (m *GetIssuerTokensRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetIssuerTokensRequest.Unmarshal(m, b)
}
func (m *GetIssuerTokensRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetIssuerTokensRequest.Marshal(b, m, deterministic)
}
func (m *GetIssuerTokensRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetIssuerTokensRequest.Merge(m, src)
}
func (m *GetIssuerTokensRequest) XXX_Size() int {
	return xxx_messageInfo_GetIssuerTokensRequest.Size(m)
}
func (m *GetIssuerTokensRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetIssuerTokensRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetIssuerTokensRequest proto.InternalMessageInfo

func (m *GetIssuerTokensRequest) GetIssuer() string {
	if m != nil {
		return m.Issuer
	}
	return ""
}

type GetIssuerTokensResponse struct {
	Token                []*Token `protobuf:"bytes,1,rep,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetIssuerTokensResponse) Reset()         { *m = GetIssuerTokensResponse{} }
func (m *GetIssuerTokensResponse) String() string { return proto.CompactTextString(m) }
func (*GetIssuerTokensResponse) ProtoMessage()    {}
func (*GetIssuerTokensResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f2f15fabe54a973d, []int{17}
}

func (m *GetIssuerTokensResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetIssuerTokensResponse.Unmarshal(m, b)
}
func (m *GetIssuerTokensResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetIssuerTokensResponse.Marshal(b, m, deterministic)
}
func (m *GetIssuerTokensResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetIssuerTokensResponse.Merge(m, src)
}
func (m *GetIssuerTokensResponse) XXX_Size() int {
	return xxx_messageInfo_GetIssuerTokensResponse.Size(m)
}
func (m *GetIssuerTokensResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetIssuerTokensResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetIssuerTokensResponse proto.InternalMessageInfo

func (m *GetIssuerTokensResponse) GetToken() []*Token {
	if m != nil {
		return m.Token
	}
	return nil
}

type GetHeadersRequest struct {
	TokenId              string   `protobuf:"bytes,1,opt,name=token_id,json=tokenId,proto3" json:"token_id,omitempty"`
	Hash                 string   `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetHeadersRequest) Reset()         { *m = GetHeadersRequest{} }
func (m *GetHeadersRequest) String() string { return proto.CompactTextString(m) }
func (*GetHeadersRequest) ProtoMessage()    {}
func (*GetHeadersRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f2f15fabe54a973d, []int{18}
}

func (m *GetHeadersRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetHeadersRequest.Unmarshal(m, b)
}
func (m *GetHeadersRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetHeadersRequest.Marshal(b, m, deterministic)
}
func (m *GetHeadersRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetHeadersRequest.Merge(m, src)
}
func (m *GetHeadersRequest) XXX_Size() int {
	return xxx_messageInfo_GetHeadersRequest.Size(m)
}
func (m *GetHeadersRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetHeadersRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetHeadersRequest proto.InternalMessageInfo

func (m *GetHeadersRequest) GetTokenId() string {
	if m != nil {
		return m.TokenId
	}
	return ""
}

func (m *GetHeadersRequest) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

type GetHeadersResponse struct {
	Token                *DB.Token      `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Blocks               []*MerkleBlock `protobuf:"bytes,2,rep,name=blocks,proto3" json:"blocks,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *GetHeadersResponse) Reset()         { *m = GetHeadersResponse{} }
func (m *GetHeadersResponse) String() string { return proto.CompactTextString(m) }
func (*GetHeadersResponse) ProtoMessage()    {}
func (*GetHeadersResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f2f15fabe54a973d, []int{19}
}

func (m *GetHeadersResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetHeadersResponse.Unmarshal(m, b)
}
func (m *GetHeadersResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetHeadersResponse.Marshal(b, m, deterministic)
}
func (m *GetHeadersResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetHeadersResponse.Merge(m, src)
}
func (m *GetHeadersResponse) XXX_Size() int {
	return xxx_messageInfo_GetHeadersResponse.Size(m)
}
func (m *GetHeadersResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetHeadersResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetHeadersResponse proto.InternalMessageInfo

func (m *GetHeadersResponse) GetToken() *DB.Token {
	if m != nil {
		return m.Token
	}
	return nil
}

func (m *GetHeadersResponse) GetBlocks() []*MerkleBlock {
	if m != nil {
		return m.Blocks
	}
	return nil
}

type MerkleBlock struct {
	Hash                 string   `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	PrevHash             string   `protobuf:"bytes,2,opt,name=prev_hash,json=prevHash,proto3" json:"prev_hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MerkleBlock) Reset()         { *m = MerkleBlock{} }
func (m *MerkleBlock) String() string { return proto.CompactTextString(m) }
func (*MerkleBlock) ProtoMessage()    {}
func (*MerkleBlock) Descriptor() ([]byte, []int) {
	return fileDescriptor_f2f15fabe54a973d, []int{20}
}

func (m *MerkleBlock) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MerkleBlock.Unmarshal(m, b)
}
func (m *MerkleBlock) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MerkleBlock.Marshal(b, m, deterministic)
}
func (m *MerkleBlock) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MerkleBlock.Merge(m, src)
}
func (m *MerkleBlock) XXX_Size() int {
	return xxx_messageInfo_MerkleBlock.Size(m)
}
func (m *MerkleBlock) XXX_DiscardUnknown() {
	xxx_messageInfo_MerkleBlock.DiscardUnknown(m)
}

var xxx_messageInfo_MerkleBlock proto.InternalMessageInfo

func (m *MerkleBlock) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func (m *MerkleBlock) GetPrevHash() string {
	if m != nil {
		return m.PrevHash
	}
	return ""
}

type GetUrlTokenRequest struct {
	Url                  string   `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetUrlTokenRequest) Reset()         { *m = GetUrlTokenRequest{} }
func (m *GetUrlTokenRequest) String() string { return proto.CompactTextString(m) }
func (*GetUrlTokenRequest) ProtoMessage()    {}
func (*GetUrlTokenRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f2f15fabe54a973d, []int{21}
}

func (m *GetUrlTokenRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetUrlTokenRequest.Unmarshal(m, b)
}
func (m *GetUrlTokenRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetUrlTokenRequest.Marshal(b, m, deterministic)
}
func (m *GetUrlTokenRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetUrlTokenRequest.Merge(m, src)
}
func (m *GetUrlTokenRequest) XXX_Size() int {
	return xxx_messageInfo_GetUrlTokenRequest.Size(m)
}
func (m *GetUrlTokenRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetUrlTokenRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetUrlTokenRequest proto.InternalMessageInfo

func (m *GetUrlTokenRequest) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

type GetUrlTokenResponse struct {
	State                *DB.State   `protobuf:"bytes,1,opt,name=state,proto3" json:"state,omitempty"`
	Blocks               []*DB.Block `protobuf:"bytes,2,rep,name=blocks,proto3" json:"blocks,omitempty"`
	Root                 string      `protobuf:"bytes,3,opt,name=root,proto3" json:"root,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *GetUrlTokenResponse) Reset()         { *m = GetUrlTokenResponse{} }
func (m *GetUrlTokenResponse) String() string { return proto.CompactTextString(m) }
func (*GetUrlTokenResponse) ProtoMessage()    {}
func (*GetUrlTokenResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f2f15fabe54a973d, []int{22}
}

func (m *GetUrlTokenResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetUrlTokenResponse.Unmarshal(m, b)
}
func (m *GetUrlTokenResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetUrlTokenResponse.Marshal(b, m, deterministic)
}
func (m *GetUrlTokenResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetUrlTokenResponse.Merge(m, src)
}
func (m *GetUrlTokenResponse) XXX_Size() int {
	return xxx_messageInfo_GetUrlTokenResponse.Size(m)
}
func (m *GetUrlTokenResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetUrlTokenResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetUrlTokenResponse proto.InternalMessageInfo

func (m *GetUrlTokenResponse) GetState() *DB.State {
	if m != nil {
		return m.State
	}
	return nil
}

func (m *GetUrlTokenResponse) GetBlocks() []*DB.Block {
	if m != nil {
		return m.Blocks
	}
	return nil
}

func (m *GetUrlTokenResponse) GetRoot() string {
	if m != nil {
		return m.Root
	}
	return ""
}

func init() {
	proto.RegisterType((*GetTokenOffersRequest)(nil), "replicator.GetTokenOffersRequest")
	proto.RegisterType((*GetTokenOffersResponse)(nil), "replicator.GetTokenOffersResponse")
	proto.RegisterType((*GetTokenListRequest)(nil), "replicator.GetTokenListRequest")
	proto.RegisterType((*GetTokenListResponse)(nil), "replicator.GetTokenListResponse")
	proto.RegisterType((*Token)(nil), "replicator.Token")
	proto.RegisterType((*TokenOffer)(nil), "replicator.TokenOffer")
	proto.RegisterType((*IssuerInfo)(nil), "replicator.IssuerInfo")
	proto.RegisterType((*GetTokenBalancesRequest)(nil), "replicator.GetTokenBalancesRequest")
	proto.RegisterType((*GetTokenBalancesResponse)(nil), "replicator.GetTokenBalancesResponse")
	proto.RegisterType((*TokenBalance)(nil), "replicator.TokenBalance")
	proto.RegisterType((*Pagination)(nil), "replicator.Pagination")
	proto.RegisterType((*VerifyIssuerRequest)(nil), "replicator.VerifyIssuerRequest")
	proto.RegisterType((*IssueTokenRequest)(nil), "replicator.IssueTokenRequest")
	proto.RegisterType((*SaveBlockRequest)(nil), "replicator.SaveBlockRequest")
	proto.RegisterType((*GetTokenRequest)(nil), "replicator.GetTokenRequest")
	proto.RegisterType((*GetTokenResponse)(nil), "replicator.GetTokenResponse")
	proto.RegisterType((*GetIssuerTokensRequest)(nil), "replicator.GetIssuerTokensRequest")
	proto.RegisterType((*GetIssuerTokensResponse)(nil), "replicator.GetIssuerTokensResponse")
	proto.RegisterType((*GetHeadersRequest)(nil), "replicator.GetHeadersRequest")
	proto.RegisterType((*GetHeadersResponse)(nil), "replicator.GetHeadersResponse")
	proto.RegisterType((*MerkleBlock)(nil), "replicator.MerkleBlock")
	proto.RegisterType((*GetUrlTokenRequest)(nil), "replicator.GetUrlTokenRequest")
	proto.RegisterType((*GetUrlTokenResponse)(nil), "replicator.GetUrlTokenResponse")
}

func init() {
	proto.RegisterFile("protos/replicator/replicator.proto", fileDescriptor_f2f15fabe54a973d)
}

var fileDescriptor_f2f15fabe54a973d = []byte{
	// 1035 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x56, 0xeb, 0x6e, 0x23, 0x35,
	0x14, 0x56, 0xda, 0x26, 0x9b, 0x9c, 0x56, 0xbd, 0xb8, 0x25, 0x0d, 0x69, 0x81, 0xe0, 0xad, 0x76,
	0x0b, 0x2c, 0x09, 0x5a, 0x56, 0x20, 0x81, 0x84, 0x44, 0x60, 0xd5, 0x56, 0x74, 0xc5, 0x32, 0xa5,
	0xac, 0xa8, 0x04, 0x91, 0x33, 0xe3, 0x49, 0xac, 0x4c, 0xc6, 0xc3, 0x8c, 0x53, 0x08, 0x6f, 0xc1,
	0xdb, 0xf1, 0x38, 0xc8, 0xc7, 0x9e, 0x4b, 0x2e, 0x53, 0xf8, 0xc3, 0x8f, 0x91, 0xec, 0x73, 0x3e,
	0x7f, 0x3e, 0xf7, 0x31, 0xd0, 0x28, 0x96, 0x4a, 0x26, 0xbd, 0x98, 0x47, 0x81, 0x70, 0x99, 0x92,
	0x71, 0x61, 0xd9, 0x45, 0x25, 0x81, 0x5c, 0xd2, 0x3e, 0xb6, 0xf8, 0x6f, 0xfb, 0x3d, 0x25, 0x27,
	0x3c, 0xf4, 0x86, 0x06, 0xd4, 0x3e, 0x19, 0x49, 0x39, 0x0a, 0x78, 0x0f, 0x77, 0xc3, 0x99, 0xdf,
	0xe3, 0xd3, 0x48, 0xcd, 0x8d, 0x92, 0x7a, 0xf0, 0xd6, 0x05, 0x57, 0x3f, 0xea, 0x03, 0xdf, 0xfb,
	0x3e, 0x8f, 0x13, 0x87, 0xff, 0x36, 0xe3, 0x89, 0x22, 0x27, 0xd0, 0x10, 0x49, 0x32, 0xe3, 0xf1,
	0x40, 0x78, 0xad, 0x4a, 0xa7, 0x72, 0xde, 0x70, 0xea, 0x46, 0x70, 0xe5, 0x91, 0x2e, 0xd4, 0x22,
	0x16, 0xb3, 0x69, 0xd2, 0xda, 0xe8, 0x54, 0xce, 0xb7, 0x9f, 0x37, 0xbb, 0x05, 0xd3, 0x5e, 0xb3,
	0x91, 0x08, 0x99, 0x12, 0x32, 0x74, 0x2c, 0x8a, 0xfe, 0x0a, 0xcd, 0xe5, 0x5b, 0x92, 0x48, 0x86,
	0x09, 0xd7, 0x4c, 0x12, 0x25, 0xad, 0x4a, 0x67, 0x73, 0x99, 0x29, 0x3f, 0xe0, 0x58, 0x14, 0x39,
	0x82, 0xaa, 0x92, 0x8a, 0x05, 0x78, 0xf1, 0x96, 0x63, 0x36, 0xf4, 0x0f, 0x38, 0x4c, 0xf9, 0xaf,
	0x45, 0xa2, 0xfe, 0x0f, 0x1f, 0xf4, 0xcd, 0x81, 0x74, 0x59, 0xd0, 0xda, 0xec, 0x54, 0xce, 0xeb,
	0x8e, 0xd9, 0xd0, 0x37, 0x70, 0xb4, 0x78, 0xb3, 0xf5, 0xeb, 0x03, 0xa8, 0x61, 0x16, 0x52, 0xbf,
	0x0e, 0x56, 0xfc, 0x72, 0x2c, 0x60, 0xd1, 0xa5, 0x6a, 0xea, 0xd2, 0x2d, 0x54, 0x11, 0x46, 0x08,
	0x6c, 0x85, 0x6c, 0xca, 0xad, 0xfd, 0xb8, 0x26, 0x67, 0xfa, 0xc8, 0x84, 0x87, 0xd6, 0xf4, 0xdd,
	0x6e, 0x9a, 0x71, 0xc3, 0x6c, 0x94, 0xfa, 0x64, 0x2c, 0xa5, 0x42, 0x83, 0x1b, 0x0e, 0xae, 0xe9,
	0x5f, 0x1b, 0x00, 0x79, 0x58, 0xcd, 0xdd, 0x9a, 0xc8, 0xb0, 0xdb, 0x83, 0x47, 0x50, 0x8d, 0x62,
	0xe1, 0xf2, 0x34, 0xc8, 0xb8, 0x21, 0x9f, 0xc3, 0x76, 0x1a, 0xcd, 0xd0, 0x97, 0xc8, 0xba, 0x14,
	0xb5, 0x2b, 0x13, 0xdb, 0xd0, 0x97, 0x0e, 0x88, 0x6c, 0x4d, 0x9e, 0x01, 0x41, 0xde, 0xc1, 0x58,
	0x06, 0x1e, 0x8f, 0x07, 0x81, 0x1c, 0x89, 0xb0, 0xb5, 0x85, 0x37, 0xee, 0xa3, 0xe6, 0x12, 0x15,
	0xd7, 0x5a, 0x4e, 0x3e, 0x84, 0x03, 0x83, 0x1e, 0xce, 0xe6, 0x19, 0xb8, 0x8a, 0xe0, 0x3d, 0x54,
	0xf4, 0xb5, 0xdc, 0x60, 0xbb, 0x70, 0x78, 0xcf, 0x02, 0xe1, 0x0d, 0x66, 0xa1, 0x12, 0xc1, 0x20,
	0xe1, 0xae, 0x0c, 0xbd, 0xa4, 0x55, 0xeb, 0x54, 0xce, 0x37, 0x9d, 0x03, 0x54, 0xdd, 0x6a, 0xcd,
	0x8d, 0x51, 0x68, 0xc7, 0x5c, 0x39, 0x0b, 0x55, 0xeb, 0x91, 0x71, 0x0c, 0x37, 0xf4, 0x67, 0x80,
	0xdc, 0x72, 0xb2, 0x0b, 0x1b, 0x59, 0xb5, 0x6c, 0x08, 0x8f, 0x3c, 0x85, 0x3d, 0xe1, 0xf1, 0x50,
	0x09, 0x35, 0x1f, 0x44, 0xb3, 0xe1, 0x84, 0xcf, 0x31, 0x2c, 0x0d, 0x67, 0x37, 0x15, 0xbf, 0x46,
	0xa9, 0x0e, 0xf7, 0x58, 0x26, 0x59, 0xb8, 0xf5, 0x9a, 0x5e, 0xc1, 0x71, 0x5a, 0x1e, 0x7d, 0x16,
	0xb0, 0xd0, 0xe5, 0x59, 0x83, 0xe5, 0xf5, 0x57, 0xf9, 0x4f, 0x3d, 0xe4, 0x43, 0x6b, 0x95, 0xca,
	0x56, 0xdb, 0x0b, 0xa8, 0x0f, 0xad, 0xcc, 0xd6, 0x5b, 0x6b, 0xa5, 0xde, 0xec, 0x21, 0x27, 0x43,
	0x96, 0xf4, 0xd2, 0x1d, 0xec, 0x14, 0xf1, 0x25, 0x25, 0x72, 0x0a, 0x0d, 0x76, 0xcf, 0x44, 0xc0,
	0x86, 0x41, 0x5a, 0x26, 0xb9, 0x80, 0x34, 0xa1, 0xe6, 0xc7, 0xf2, 0x4f, 0x1e, 0x62, 0x30, 0xb6,
	0x1c, 0xbb, 0xa3, 0x5f, 0x00, 0xe4, 0x9e, 0x61, 0x47, 0x89, 0xa9, 0x50, 0xc8, 0xbc, 0xe5, 0x98,
	0x8d, 0x3e, 0x2b, 0x7d, 0x3f, 0xe1, 0xca, 0xd2, 0xda, 0x1d, 0xfd, 0x08, 0x0e, 0x7f, 0xe2, 0xb1,
	0xf0, 0xe7, 0x26, 0x57, 0x69, 0x18, 0xb1, 0x2d, 0x75, 0x89, 0x58, 0xf3, 0x70, 0x43, 0x5f, 0xc1,
	0x01, 0xc2, 0x4c, 0x3f, 0x58, 0x68, 0x49, 0x27, 0xe1, 0x64, 0x29, 0xeb, 0x24, 0x54, 0xd2, 0x6b,
	0xd8, 0xbf, 0x61, 0xf7, 0xbc, 0x1f, 0x48, 0x77, 0xf2, 0x2f, 0x6c, 0x43, 0x8d, 0x59, 0x61, 0x33,
	0x27, 0x8d, 0x92, 0x3e, 0x83, 0xbd, 0x34, 0x93, 0x29, 0xd9, 0xdb, 0x50, 0x37, 0x45, 0x9f, 0x95,
	0xde, 0x23, 0xdc, 0x5f, 0x79, 0xf4, 0x4b, 0xd8, 0xcf, 0xd1, 0x36, 0xdf, 0x4f, 0x8b, 0x39, 0x59,
	0x3b, 0x5c, 0x8c, 0x9e, 0x7e, 0x82, 0x83, 0xd7, 0x44, 0x0c, 0x15, 0x59, 0xf9, 0x35, 0xa1, 0x66,
	0x5a, 0xd4, 0xde, 0x67, 0x77, 0xb4, 0x8f, 0x15, 0xbb, 0x78, 0x62, 0xf5, 0xd6, 0xcd, 0x07, 0x6f,
	0xed, 0xc3, 0xc1, 0x05, 0x57, 0x97, 0x9c, 0x79, 0x85, 0x1f, 0x4a, 0xb9, 0x8b, 0xd8, 0x39, 0x2c,
	0x19, 0xdb, 0xbe, 0xc2, 0x35, 0x9d, 0x00, 0x29, 0x72, 0x58, 0x13, 0xce, 0x16, 0x1d, 0x2f, 0x19,
	0x7c, 0x3d, 0xa8, 0x61, 0xa4, 0xf5, 0x68, 0xd7, 0x96, 0x1e, 0x17, 0x2d, 0x7d, 0xc5, 0xe3, 0x49,
	0x60, 0x53, 0x69, 0x61, 0xf4, 0x2b, 0xd8, 0x2e, 0x88, 0x33, 0x7b, 0x2a, 0xb9, 0x3d, 0xfa, 0x5f,
	0x12, 0xc5, 0xfc, 0x7e, 0x50, 0x30, 0xb4, 0xae, 0x05, 0x97, 0xda, 0xd8, 0x27, 0x68, 0xec, 0x6d,
	0x1c, 0x2c, 0x24, 0x75, 0x1f, 0x36, 0x67, 0x71, 0x60, 0x59, 0xf4, 0x92, 0xfe, 0x8e, 0xff, 0xa9,
	0x1c, 0x97, 0x7b, 0x95, 0x28, 0xa6, 0xf8, 0x8a, 0x57, 0x37, 0x5a, 0xea, 0x18, 0x25, 0x79, 0xb2,
	0xe4, 0xd5, 0x72, 0x75, 0x59, 0xed, 0xba, 0xb1, 0xff, 0xfc, 0xef, 0x2a, 0x80, 0x93, 0xc5, 0x80,
	0xbc, 0x81, 0xdd, 0xc5, 0xff, 0x31, 0x79, 0xbf, 0x18, 0xa2, 0xb5, 0x2f, 0x82, 0x36, 0x7d, 0x08,
	0x62, 0x3d, 0xf9, 0x25, 0x2f, 0xd6, 0x74, 0x48, 0x91, 0xc7, 0xeb, 0xce, 0x2d, 0x4d, 0xc3, 0xf6,
	0xd9, 0xc3, 0x20, 0x4b, 0x7f, 0x01, 0x3b, 0xc5, 0x19, 0x40, 0xde, 0x2b, 0x9e, 0x5a, 0x33, 0x1d,
	0xda, 0xcd, 0xae, 0x79, 0xfc, 0x74, 0xd3, 0xc7, 0x4f, 0xf7, 0xa5, 0x7e, 0xfc, 0x90, 0x6f, 0xec,
	0xc8, 0x37, 0xbf, 0xd8, 0x77, 0x56, 0x7e, 0x62, 0xc5, 0x3c, 0x96, 0x92, 0x7c, 0x0d, 0x8d, 0x6c,
	0x2a, 0x90, 0xd3, 0x22, 0xc7, 0xf2, 0xb0, 0x28, 0xa5, 0xf8, 0x0e, 0x20, 0xaf, 0xf2, 0x45, 0x3b,
	0x56, 0x3a, 0xa8, 0xfd, 0x6e, 0x99, 0xda, 0x46, 0xe7, 0x25, 0xd4, 0xd3, 0xc8, 0x91, 0x93, 0x75,
	0xf1, 0x4c, 0x89, 0x4e, 0xd7, 0x2b, 0x2d, 0xcd, 0x1d, 0x8e, 0xa7, 0xe2, 0x04, 0x20, 0xcb, 0xa9,
	0x5f, 0x33, 0x50, 0xda, 0x8f, 0x1f, 0xc4, 0x58, 0xee, 0x1f, 0x60, 0xa7, 0xf8, 0x5c, 0x5a, 0x4c,
	0xe0, 0x9a, 0x27, 0x5c, 0xbb, 0x53, 0x0e, 0x30, 0x94, 0xfd, 0xcf, 0xee, 0x5e, 0x8c, 0x84, 0x1a,
	0xcf, 0x86, 0x5d, 0x57, 0x4e, 0x7b, 0xd1, 0x44, 0x7d, 0xec, 0xb2, 0x64, 0xac, 0x17, 0x5e, 0x2f,
	0x08, 0xf5, 0x17, 0x47, 0x6e, 0x6f, 0xe5, 0x31, 0x3d, 0xac, 0xa1, 0xe8, 0xd3, 0x7f, 0x02, 0x00,
	0x00, 0xff, 0xff, 0x5c, 0xc7, 0xbc, 0x51, 0x68, 0x0b, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ReplicatorClient is the client API for Replicator service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ReplicatorClient interface {
	// Returns available token offers
	GetTokenOffers(ctx context.Context, in *GetTokenOffersRequest, opts ...grpc.CallOption) (*GetTokenOffersResponse, error)
	// Returns current token balances
	GetTokenBalances(ctx context.Context, in *GetTokenBalancesRequest, opts ...grpc.CallOption) (*GetTokenBalancesResponse, error)
	// Verifies a user permitions to issue a token. Returns exceptions if
	// passed user is not contained in issuer's db
	VerifyIssuer(ctx context.Context, in *VerifyIssuerRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// IssueToken — Issue new token with given data. Request data equal to
	// token purchase data, because it is token offer.
	IssueToken(ctx context.Context, in *IssueTokenRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	SaveBlock(ctx context.Context, in *SaveBlockRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	GetHeaders(ctx context.Context, in *GetHeadersRequest, opts ...grpc.CallOption) (*GetHeadersResponse, error)
	GetToken(ctx context.Context, in *GetTokenRequest, opts ...grpc.CallOption) (*GetTokenResponse, error)
	GetIssuerTokens(ctx context.Context, in *GetIssuerTokensRequest, opts ...grpc.CallOption) (*GetIssuerTokensResponse, error)
	// GetTokenList — return list of issued token with infomation about
	// expiration time and fix price.
	GetTokenList(ctx context.Context, in *GetTokenListRequest, opts ...grpc.CallOption) (*GetTokenListResponse, error)
}

type replicatorClient struct {
	cc *grpc.ClientConn
}

func NewReplicatorClient(cc *grpc.ClientConn) ReplicatorClient {
	return &replicatorClient{cc}
}

func (c *replicatorClient) GetTokenOffers(ctx context.Context, in *GetTokenOffersRequest, opts ...grpc.CallOption) (*GetTokenOffersResponse, error) {
	out := new(GetTokenOffersResponse)
	err := c.cc.Invoke(ctx, "/replicator.Replicator/GetTokenOffers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *replicatorClient) GetTokenBalances(ctx context.Context, in *GetTokenBalancesRequest, opts ...grpc.CallOption) (*GetTokenBalancesResponse, error) {
	out := new(GetTokenBalancesResponse)
	err := c.cc.Invoke(ctx, "/replicator.Replicator/GetTokenBalances", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *replicatorClient) VerifyIssuer(ctx context.Context, in *VerifyIssuerRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/replicator.Replicator/VerifyIssuer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *replicatorClient) IssueToken(ctx context.Context, in *IssueTokenRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/replicator.Replicator/IssueToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *replicatorClient) SaveBlock(ctx context.Context, in *SaveBlockRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/replicator.Replicator/SaveBlock", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *replicatorClient) GetHeaders(ctx context.Context, in *GetHeadersRequest, opts ...grpc.CallOption) (*GetHeadersResponse, error) {
	out := new(GetHeadersResponse)
	err := c.cc.Invoke(ctx, "/replicator.Replicator/GetHeaders", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *replicatorClient) GetToken(ctx context.Context, in *GetTokenRequest, opts ...grpc.CallOption) (*GetTokenResponse, error) {
	out := new(GetTokenResponse)
	err := c.cc.Invoke(ctx, "/replicator.Replicator/GetToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *replicatorClient) GetIssuerTokens(ctx context.Context, in *GetIssuerTokensRequest, opts ...grpc.CallOption) (*GetIssuerTokensResponse, error) {
	out := new(GetIssuerTokensResponse)
	err := c.cc.Invoke(ctx, "/replicator.Replicator/GetIssuerTokens", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *replicatorClient) GetTokenList(ctx context.Context, in *GetTokenListRequest, opts ...grpc.CallOption) (*GetTokenListResponse, error) {
	out := new(GetTokenListResponse)
	err := c.cc.Invoke(ctx, "/replicator.Replicator/GetTokenList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ReplicatorServer is the server API for Replicator service.
type ReplicatorServer interface {
	// Returns available token offers
	GetTokenOffers(context.Context, *GetTokenOffersRequest) (*GetTokenOffersResponse, error)
	// Returns current token balances
	GetTokenBalances(context.Context, *GetTokenBalancesRequest) (*GetTokenBalancesResponse, error)
	// Verifies a user permitions to issue a token. Returns exceptions if
	// passed user is not contained in issuer's db
	VerifyIssuer(context.Context, *VerifyIssuerRequest) (*empty.Empty, error)
	// IssueToken — Issue new token with given data. Request data equal to
	// token purchase data, because it is token offer.
	IssueToken(context.Context, *IssueTokenRequest) (*empty.Empty, error)
	SaveBlock(context.Context, *SaveBlockRequest) (*empty.Empty, error)
	GetHeaders(context.Context, *GetHeadersRequest) (*GetHeadersResponse, error)
	GetToken(context.Context, *GetTokenRequest) (*GetTokenResponse, error)
	GetIssuerTokens(context.Context, *GetIssuerTokensRequest) (*GetIssuerTokensResponse, error)
	// GetTokenList — return list of issued token with infomation about
	// expiration time and fix price.
	GetTokenList(context.Context, *GetTokenListRequest) (*GetTokenListResponse, error)
}

// UnimplementedReplicatorServer can be embedded to have forward compatible implementations.
type UnimplementedReplicatorServer struct {
}

func (*UnimplementedReplicatorServer) GetTokenOffers(ctx context.Context, req *GetTokenOffersRequest) (*GetTokenOffersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTokenOffers not implemented")
}
func (*UnimplementedReplicatorServer) GetTokenBalances(ctx context.Context, req *GetTokenBalancesRequest) (*GetTokenBalancesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTokenBalances not implemented")
}
func (*UnimplementedReplicatorServer) VerifyIssuer(ctx context.Context, req *VerifyIssuerRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method VerifyIssuer not implemented")
}
func (*UnimplementedReplicatorServer) IssueToken(ctx context.Context, req *IssueTokenRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method IssueToken not implemented")
}
func (*UnimplementedReplicatorServer) SaveBlock(ctx context.Context, req *SaveBlockRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SaveBlock not implemented")
}
func (*UnimplementedReplicatorServer) GetHeaders(ctx context.Context, req *GetHeadersRequest) (*GetHeadersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetHeaders not implemented")
}
func (*UnimplementedReplicatorServer) GetToken(ctx context.Context, req *GetTokenRequest) (*GetTokenResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetToken not implemented")
}
func (*UnimplementedReplicatorServer) GetIssuerTokens(ctx context.Context, req *GetIssuerTokensRequest) (*GetIssuerTokensResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetIssuerTokens not implemented")
}
func (*UnimplementedReplicatorServer) GetTokenList(ctx context.Context, req *GetTokenListRequest) (*GetTokenListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTokenList not implemented")
}

func RegisterReplicatorServer(s *grpc.Server, srv ReplicatorServer) {
	s.RegisterService(&_Replicator_serviceDesc, srv)
}

func _Replicator_GetTokenOffers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTokenOffersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReplicatorServer).GetTokenOffers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/replicator.Replicator/GetTokenOffers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReplicatorServer).GetTokenOffers(ctx, req.(*GetTokenOffersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Replicator_GetTokenBalances_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTokenBalancesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReplicatorServer).GetTokenBalances(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/replicator.Replicator/GetTokenBalances",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReplicatorServer).GetTokenBalances(ctx, req.(*GetTokenBalancesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Replicator_VerifyIssuer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VerifyIssuerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReplicatorServer).VerifyIssuer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/replicator.Replicator/VerifyIssuer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReplicatorServer).VerifyIssuer(ctx, req.(*VerifyIssuerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Replicator_IssueToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IssueTokenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReplicatorServer).IssueToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/replicator.Replicator/IssueToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReplicatorServer).IssueToken(ctx, req.(*IssueTokenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Replicator_SaveBlock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SaveBlockRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReplicatorServer).SaveBlock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/replicator.Replicator/SaveBlock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReplicatorServer).SaveBlock(ctx, req.(*SaveBlockRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Replicator_GetHeaders_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetHeadersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReplicatorServer).GetHeaders(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/replicator.Replicator/GetHeaders",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReplicatorServer).GetHeaders(ctx, req.(*GetHeadersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Replicator_GetToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTokenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReplicatorServer).GetToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/replicator.Replicator/GetToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReplicatorServer).GetToken(ctx, req.(*GetTokenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Replicator_GetIssuerTokens_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetIssuerTokensRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReplicatorServer).GetIssuerTokens(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/replicator.Replicator/GetIssuerTokens",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReplicatorServer).GetIssuerTokens(ctx, req.(*GetIssuerTokensRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Replicator_GetTokenList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTokenListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReplicatorServer).GetTokenList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/replicator.Replicator/GetTokenList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReplicatorServer).GetTokenList(ctx, req.(*GetTokenListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Replicator_serviceDesc = grpc.ServiceDesc{
	ServiceName: "replicator.Replicator",
	HandlerType: (*ReplicatorServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetTokenOffers",
			Handler:    _Replicator_GetTokenOffers_Handler,
		},
		{
			MethodName: "GetTokenBalances",
			Handler:    _Replicator_GetTokenBalances_Handler,
		},
		{
			MethodName: "VerifyIssuer",
			Handler:    _Replicator_VerifyIssuer_Handler,
		},
		{
			MethodName: "IssueToken",
			Handler:    _Replicator_IssueToken_Handler,
		},
		{
			MethodName: "SaveBlock",
			Handler:    _Replicator_SaveBlock_Handler,
		},
		{
			MethodName: "GetHeaders",
			Handler:    _Replicator_GetHeaders_Handler,
		},
		{
			MethodName: "GetToken",
			Handler:    _Replicator_GetToken_Handler,
		},
		{
			MethodName: "GetIssuerTokens",
			Handler:    _Replicator_GetIssuerTokens_Handler,
		},
		{
			MethodName: "GetTokenList",
			Handler:    _Replicator_GetTokenList_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "protos/replicator/replicator.proto",
}
