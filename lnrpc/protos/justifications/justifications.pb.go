// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protos/justifications/justifications.proto

package justifications

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	lock "github.com/pkt-cash/pktd/lnd/lnrpc/protos/lock"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// LockToken the token locking
type LockToken struct {
	// lock — information about lock
	Lock                 *lock.Lock `protobuf:"bytes,1,opt,name=lock,proto3" json:"lock,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *LockToken) Reset()         { *m = LockToken{} }
func (m *LockToken) String() string { return proto.CompactTextString(m) }
func (*LockToken) ProtoMessage()    {}
func (*LockToken) Descriptor() ([]byte, []int) {
	return fileDescriptor_ee571a5de13873a7, []int{0}
}

func (m *LockToken) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LockToken.Unmarshal(m, b)
}
func (m *LockToken) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LockToken.Marshal(b, m, deterministic)
}
func (m *LockToken) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LockToken.Merge(m, src)
}
func (m *LockToken) XXX_Size() int {
	return xxx_messageInfo_LockToken.Size(m)
}
func (m *LockToken) XXX_DiscardUnknown() {
	xxx_messageInfo_LockToken.DiscardUnknown(m)
}

var xxx_messageInfo_LockToken proto.InternalMessageInfo

func (m *LockToken) GetLock() *lock.Lock {
	if m != nil {
		return m.Lock
	}
	return nil
}

// TranferToken receiving funds for tokens and unlcok them
type TranferToken struct {
	// htlc_secret_hash — htlc genereted issuer
	HtlcSecretHash string `protobuf:"bytes,1,opt,name=htlc_secret_hash,json=htlcSecretHash,proto3" json:"htlc_secret_hash,omitempty"`
	// lock — hash information about lock
	Lock                 string   `protobuf:"bytes,2,opt,name=lock,proto3" json:"lock,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TranferToken) Reset()         { *m = TranferToken{} }
func (m *TranferToken) String() string { return proto.CompactTextString(m) }
func (*TranferToken) ProtoMessage()    {}
func (*TranferToken) Descriptor() ([]byte, []int) {
	return fileDescriptor_ee571a5de13873a7, []int{1}
}

func (m *TranferToken) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TranferToken.Unmarshal(m, b)
}
func (m *TranferToken) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TranferToken.Marshal(b, m, deterministic)
}
func (m *TranferToken) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TranferToken.Merge(m, src)
}
func (m *TranferToken) XXX_Size() int {
	return xxx_messageInfo_TranferToken.Size(m)
}
func (m *TranferToken) XXX_DiscardUnknown() {
	xxx_messageInfo_TranferToken.DiscardUnknown(m)
}

var xxx_messageInfo_TranferToken proto.InternalMessageInfo

func (m *TranferToken) GetHtlcSecretHash() string {
	if m != nil {
		return m.HtlcSecretHash
	}
	return ""
}

func (m *TranferToken) GetLock() string {
	if m != nil {
		return m.Lock
	}
	return ""
}

// LockTimeOver timeout for token locking
type LockTimeOver struct {
	// proof_elapsed — PKT block hash confirming expiration lock
	ProofElapsed string `protobuf:"bytes,1,opt,name=proof_elapsed,json=proofElapsed,proto3" json:"proof_elapsed,omitempty"`
	// lock_id — hash with information about lock justification
	Lock                 string   `protobuf:"bytes,2,opt,name=lock,proto3" json:"lock,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LockTimeOver) Reset()         { *m = LockTimeOver{} }
func (m *LockTimeOver) String() string { return proto.CompactTextString(m) }
func (*LockTimeOver) ProtoMessage()    {}
func (*LockTimeOver) Descriptor() ([]byte, []int) {
	return fileDescriptor_ee571a5de13873a7, []int{2}
}

func (m *LockTimeOver) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LockTimeOver.Unmarshal(m, b)
}
func (m *LockTimeOver) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LockTimeOver.Marshal(b, m, deterministic)
}
func (m *LockTimeOver) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LockTimeOver.Merge(m, src)
}
func (m *LockTimeOver) XXX_Size() int {
	return xxx_messageInfo_LockTimeOver.Size(m)
}
func (m *LockTimeOver) XXX_DiscardUnknown() {
	xxx_messageInfo_LockTimeOver.DiscardUnknown(m)
}

var xxx_messageInfo_LockTimeOver proto.InternalMessageInfo

func (m *LockTimeOver) GetProofElapsed() string {
	if m != nil {
		return m.ProofElapsed
	}
	return ""
}

func (m *LockTimeOver) GetLock() string {
	if m != nil {
		return m.Lock
	}
	return ""
}

func init() {
	proto.RegisterType((*LockToken)(nil), "justifications.LockToken")
	proto.RegisterType((*TranferToken)(nil), "justifications.TranferToken")
	proto.RegisterType((*LockTimeOver)(nil), "justifications.LockTimeOver")
}

func init() {
	proto.RegisterFile("protos/justifications/justifications.proto", fileDescriptor_ee571a5de13873a7)
}

var fileDescriptor_ee571a5de13873a7 = []byte{
	// 235 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x90, 0x41, 0x4b, 0x03, 0x31,
	0x10, 0x85, 0xa9, 0x88, 0xd0, 0x71, 0x2d, 0x92, 0x83, 0x88, 0x07, 0x91, 0x7a, 0x29, 0x8a, 0xbb,
	0xa0, 0x17, 0xf1, 0x28, 0x88, 0x1e, 0x0a, 0x42, 0xed, 0xc9, 0xcb, 0x92, 0x4e, 0x67, 0x4d, 0xdc,
	0xed, 0x4e, 0x48, 0x52, 0x7f, 0xbf, 0x64, 0xb2, 0x17, 0x65, 0x0f, 0x09, 0xc9, 0xf7, 0xde, 0x7c,
	0x81, 0xc0, 0x8d, 0xf3, 0x1c, 0x39, 0x54, 0xdf, 0xfb, 0x10, 0x6d, 0x63, 0x51, 0x47, 0xcb, 0xfd,
	0xff, 0x6b, 0x29, 0x25, 0x35, 0xfb, 0x4b, 0x2f, 0xce, 0x86, 0xd9, 0x8e, 0xb1, 0x95, 0x2d, 0xf7,
	0xe6, 0xb7, 0x30, 0x5d, 0x32, 0xb6, 0x6b, 0x6e, 0xa9, 0x57, 0x97, 0x70, 0x98, 0xa2, 0xf3, 0xc9,
	0xd5, 0x64, 0x71, 0x7c, 0x0f, 0xa5, 0xf4, 0x52, 0xbc, 0x12, 0x3e, 0x5f, 0x42, 0xb1, 0xf6, 0xba,
	0x6f, 0xc8, 0xe7, 0xfe, 0x02, 0x4e, 0x4d, 0xec, 0xb0, 0x0e, 0x84, 0x9e, 0x62, 0x6d, 0x74, 0x30,
	0x32, 0x3b, 0x5d, 0xcd, 0x12, 0xff, 0x10, 0xfc, 0xa6, 0x83, 0x51, 0x6a, 0x30, 0x1f, 0x48, 0x9a,
	0x6d, 0xaf, 0x50, 0xc8, 0xd3, 0x76, 0x47, 0xef, 0x3f, 0xe4, 0xd5, 0x35, 0x9c, 0x38, 0xcf, 0xdc,
	0xd4, 0xd4, 0x69, 0x17, 0x68, 0x3b, 0xa8, 0x0a, 0x81, 0x2f, 0x99, 0x8d, 0x89, 0x9e, 0x9f, 0x3e,
	0x1f, 0xbf, 0x6c, 0x34, 0xfb, 0x4d, 0x89, 0xbc, 0xab, 0x5c, 0x1b, 0xef, 0x50, 0x07, 0x93, 0x0e,
	0xdb, 0xaa, 0xeb, 0xd3, 0xf2, 0x0e, 0xab, 0xd1, 0xcf, 0xdb, 0x1c, 0x09, 0x7e, 0xf8, 0x0d, 0x00,
	0x00, 0xff, 0xff, 0x0c, 0x74, 0xc2, 0x80, 0x5c, 0x01, 0x00, 0x00,
}
