{
  "swagger": "2.0",
  "info": {
    "title": "tokens/replicator/replicator.proto",
    "version": "version not set"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {},
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "type_url": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "replicatorAuthResponse": {
      "type": "object",
      "properties": {
        "jwt": {
          "type": "string"
        },
        "expire_date": {
          "type": "string",
          "format": "int64"
        }
      },
      "description": "We need this dataset to validate jwt which will be needed later when we will\nhandle request with required login data. For this we save in memory jwt."
    },
    "replicatorGetTokenBalancesResponse": {
      "type": "object",
      "properties": {
        "balances": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/replicatorTokenBalance"
          }
        },
        "total": {
          "type": "string",
          "format": "uint64"
        }
      }
    },
    "replicatorGetTokenOffersResponse": {
      "type": "object",
      "properties": {
        "offers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/replicatorTokenOffer"
          }
        },
        "total": {
          "type": "string",
          "format": "uint64"
        }
      }
    },
    "replicatorIssuerInfo": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "This value is explicetely used by Replicator to uniquely identify related\nissuer later in order to ban him (discredite case), since\n\"identity_pubkey\", \"host\" may be changed"
        },
        "identity_pubkey": {
          "type": "string",
          "description": "The following field values are used to open payment channel, invoices\ncommands execution etc."
        },
        "host": {
          "type": "string",
          "title": "Is used to establish client connection to the issuer's node during some\nRPC calls"
        }
      }
    },
    "replicatorPagination": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "string",
          "format": "uint64"
        },
        "offset": {
          "type": "string",
          "format": "uint64"
        }
      }
    },
    "replicatorTokenBalance": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        },
        "available": {
          "type": "string",
          "format": "uint64"
        },
        "frozen": {
          "type": "string",
          "format": "uint64"
        }
      }
    },
    "replicatorTokenOffer": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        },
        "price": {
          "type": "string",
          "format": "uint64",
          "title": "TODO: discuss\n ? Should we assume decimal prices\n ? Add units field"
        },
        "issuer_info": {
          "$ref": "#/definitions/replicatorIssuerInfo"
        },
        "token_holder_login": {
          "type": "string",
          "description": "Value of this field may be empty orRegisterTokenHolder filled depending\non context (e.g. gettokenoffers, verifytokenpurchasesignature)",
          "title": "It is assumed that the each registered token holder login is unique"
        },
        "token_buyer_login": {
          "type": "string",
          "description": "Value of this field may be empty or filled depending on context\n(e.g. gettokenoffers, verifytokenpurchasesignature)",
          "title": "It is assumed that the each registered token holder login is unique"
        },
        "valid_until_seconds": {
          "type": "string",
          "format": "int64",
          "title": "This field protects issuers from such a case, when potential buyer\nsuccessfully acquires dozens of signatures just in case if that issuer\nwould raise up the price later. If a Token Wallet holder would like to\nopen channel with an outdated offer, Replicator would reject to register\nthis purchase and buyer stays unprotected"
        }
      }
    },
    "replicatorTokenPurchase": {
      "type": "object",
      "properties": {
        "offer": {
          "$ref": "#/definitions/replicatorTokenOffer"
        },
        "issuer_signature": {
          "type": "string",
          "title": "Presents signature of an offer. This signature is used to identify,\nthat issuer accepts terms described in the offer and is responsible\nto follow them in this transaction. If signature is not valid, then\nchannel should be closed. Otherwise, Replicator registers token\npurchase details provided and tracks blockchain for a closing transaction\nin order to determine if the issuer were not break terms"
        },
        "initial_tx_hash": {
          "type": "string"
        }
      }
    },
    "runtimeError": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        },
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  }
}
