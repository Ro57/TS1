{
  "swagger": "2.0",
  "info": {
    "title": "protos/replicator/replicator.proto",
    "version": "version not set"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {},
  "definitions": {
    "justificationsLockTimeOver": {
      "type": "object",
      "properties": {
        "proof_elapsed": {
          "type": "string",
          "title": "proof_elapsed — PKT block hash confirming expiration lock"
        },
        "lock": {
          "type": "string",
          "title": "lock_id — hash with information abiut lock justification"
        }
      },
      "title": "LockTimeOver timeout for token locking"
    },
    "justificationsLockToken": {
      "type": "object",
      "properties": {
        "lock": {
          "$ref": "#/definitions/lockLock",
          "title": "lock — information about lock"
        }
      },
      "title": "LockToken the token locking"
    },
    "justificationsTranferToken": {
      "type": "object",
      "properties": {
        "htlc_secret_hash": {
          "type": "string",
          "title": "htlc_secret_hash — htlc genereted issuer"
        },
        "lock": {
          "type": "string",
          "title": "lock — hash information about lock"
        }
      },
      "title": "TranferToken receiving funds for tokens and unlcok them"
    },
    "lockLock": {
      "type": "object",
      "properties": {
        "count": {
          "type": "string",
          "format": "int64",
          "title": "count — number of sending tokens"
        },
        "recipient": {
          "type": "string",
          "title": "recipient — wallet addres of new owner of tokens"
        },
        "sender": {
          "type": "string",
          "title": "sender — owner of the wallet address to which tokens will be returned"
        },
        "htlc": {
          "type": "string",
          "title": "htlc — hash of contract"
        },
        "proof_count": {
          "type": "integer",
          "format": "int32",
          "title": "proof_count — lock expiration time in PKT blocks"
        },
        "creation_height": {
          "type": "string",
          "format": "uint64",
          "title": "creation_height — creation height in token blockchain"
        },
        "signature": {
          "type": "string",
          "title": "signature generated with old owner private key"
        }
      },
      "title": "Lock contain information about tokens and contract for transferring"
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "type_url": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "replicatorGetTokenBalancesResponse": {
      "type": "object",
      "properties": {
        "balances": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/replicatorTokenBalance"
          }
        },
        "total": {
          "type": "string",
          "format": "uint64"
        }
      }
    },
    "replicatorGetTokenListResponse": {
      "type": "object",
      "properties": {
        "tokens": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/replicatorToken"
          },
          "title": "tokens list of registred tokens"
        },
        "total": {
          "type": "integer",
          "format": "int32",
          "title": "total number of registered tokens, if the issued_id is passed, only\nits tokens are taken into account"
        }
      },
      "title": "GetTokenListResponse — list of tokens with additional info"
    },
    "replicatorGetTokenOffersResponse": {
      "type": "object",
      "properties": {
        "offers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/replicatorTokenOffer"
          }
        },
        "total": {
          "type": "string",
          "format": "uint64"
        }
      }
    },
    "replicatorGetTokenResponse": {
      "type": "object",
      "properties": {
        "tokens": {
          "$ref": "#/definitions/replicatorToken"
        }
      }
    },
    "replicatorIssuerInfo": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "This value is explicetely used by Replicator to uniquely identify related\nissuer later in order to ban him (discredite case), since\n\"identity_pubkey\", \"host\" may be changed"
        },
        "identity_pubkey": {
          "type": "string",
          "description": "The following field values are used to open payment channel, invoices\ncommands execution etc."
        },
        "host": {
          "type": "string",
          "title": "Is used to establish client connection to the issuer's node during some\nRPC calls"
        }
      }
    },
    "replicatorPagination": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "string",
          "format": "uint64"
        },
        "offset": {
          "type": "string",
          "format": "uint64"
        }
      }
    },
    "replicatorToken": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "token": {
          "$ref": "#/definitions/tokendbToken",
          "title": "offer on token issue"
        },
        "root": {
          "type": "string"
        }
      }
    },
    "replicatorTokenBalance": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        },
        "available": {
          "type": "string",
          "format": "uint64"
        },
        "frozen": {
          "type": "string",
          "format": "uint64"
        }
      }
    },
    "replicatorTokenOffer": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        },
        "price": {
          "type": "string",
          "format": "uint64",
          "title": "TODO: discuss\n ? Should we assume decimal prices\n ? Add units field"
        },
        "issuer_info": {
          "$ref": "#/definitions/replicatorIssuerInfo"
        },
        "token_holder_login": {
          "type": "string",
          "description": "Value of this field may be empty orRegisterTokenHolder filled depending\non context (e.g. gettokenoffers, verifytokenpurchasesignature)",
          "title": "It is assumed that the each registered token holder login is unique"
        },
        "token_buyer_login": {
          "type": "string",
          "description": "Value of this field may be empty or filled depending on context\n(e.g. gettokenoffers, verifytokenpurchasesignature)",
          "title": "It is assumed that the each registered token holder login is unique"
        },
        "valid_until_seconds": {
          "type": "string",
          "format": "int64",
          "title": "This field protects issuers from such a case, when potential buyer\nsuccessfully acquires dozens of signatures just in case if that issuer\nwould raise up the price later. If a Token Wallet holder would like to\nopen channel with an outdated offer, Replicator would reject to register\nthis purchase and buyer stays unprotected"
        },
        "count": {
          "type": "string",
          "format": "uint64",
          "title": "count — the number of tokens to be issued"
        }
      }
    },
    "runtimeError": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        },
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "tokendbBlock": {
      "type": "object",
      "properties": {
        "prev_block": {
          "type": "string",
          "title": "prev_block — hash of previous block"
        },
        "lock": {
          "$ref": "#/definitions/justificationsLockToken",
          "title": "lock — payload with lock"
        },
        "transfer": {
          "$ref": "#/definitions/justificationsTranferToken",
          "title": "transfer — payload with transaction info"
        },
        "lock_over": {
          "$ref": "#/definitions/justificationsLockTimeOver",
          "title": "lock_over — payload with lock time over"
        },
        "creation": {
          "type": "string",
          "format": "int64",
          "title": "creation — date of block creation in unix time format"
        },
        "state": {
          "type": "string",
          "title": "state — hash of state structure containing locks, owners and meta token \ninfo"
        },
        "pkt_block_hash": {
          "type": "string",
          "title": "pkt_block_hash —  the hash of the most recent PKT block"
        },
        "pkt_block_height": {
          "type": "integer",
          "format": "int32",
          "title": "pkt_block_height — the height of the most recent PKT block"
        },
        "height": {
          "type": "string",
          "format": "uint64",
          "title": "height — the current height of this TokenStrike chain"
        },
        "signature": {
          "type": "string",
          "title": "signature — issuer ID, needed for validate. If signature incorrect block\nis not valid"
        }
      },
      "title": "Block is struct of block in blockchain"
    },
    "tokendbToken": {
      "type": "object",
      "properties": {
        "count": {
          "type": "string",
          "format": "int64",
          "title": "count — number of issued tokens;"
        },
        "expiration": {
          "type": "integer",
          "format": "int32",
          "title": "expiration — number of PKT block after which the token expires"
        },
        "creation": {
          "type": "string",
          "format": "int64",
          "title": "creation — date of token creation in unix time format"
        },
        "url": {
          "type": "string",
          "title": "urls — set of urls for access to blockchain"
        },
        "issuer_pubkey": {
          "type": "string",
          "title": "issuer_pubkey — public key of issuer used for signing"
        }
      },
      "title": "Token contain information about token"
    }
  }
}
