syntax = "proto3";

package tokendb;

option go_package = "github.com/pkt-cash/pktd/lnd/lnrpc/protos/DB";

import "google/protobuf/any.proto";

// Block is struct of block in blockchain
// Caleb: We should have a "block header" which is small and can be 
// copied into an Accusation
message Block {
    // header — data to identify this block
    // Caleb: Block header should contain the height of the block
    BlockHeader header = 1;
    // justification — one of justification structure with payload information.
    // TODO: After implement type of justification, change Any type to oneof
    google.protobuf.Any justification = 2;
    // signature — issuer ID, needed for validate. If signature incorrect block
    // is not valid
    string signature = 3;
    // state — hash of current state of database
    string state = 4;
    // available_count — number available tokens for buying
    int64 available_count = 5;
    // locks — set of lock structures 
    repeated Lock locks = 6;
    // owners — a set of structures with addresses and their balances
    repeated Owner owners = 7;
}

// Lock contain information about tokens and contract for transferring
message Lock {
    // id — identifactor of lock. It will be send as response on 
    // lock_tokens_for_transfer method
    string id = 1;
    // count — number of sending tokens
    int64 count = 2;
    // owner — wallet addres of new owner of tokens
    string owner = 3;
    // htlc — hash of contract
    string htlc = 4;
    // proof_count — lock expiration time in PKT blocks
    int32 proof_count = 5;
}

// Owner contains information about the holders' wallets and their balances
message Owner {
    // holder_wallet — hash of wallet address of holder 
    string holder_wallet  = 1;
    // count — number of tokens held on wallet
    int64 count = 2;
}

// Token contain information about token
message Token {
    // count — number of issued tokens;
    int64 count = 1;
    // expiration — number of PKT block after which the token expires
    int32 expiration = 2;
    // creation — date of token creation in unix time format
    int64 creation = 3;
    // urls — set of urls for access to blockchain
    string url = 4;
}

// BlockHeader contain reference on previus block and creation time.
// Hash of this structure will be used as a key in key-value storage
message BlockHeader {
    // prev_block — hash of previous block 
    string prev_block = 1;
    // creation — date of block creation in unix time format
    int64 creation = 2;
    // issuer_address — issuer wallet address to transaction.
    // Update information about token will be by URL.
    string issuer_address = 3;
}